---
title: "Final Portfolio - Davis Addink"
format: html
editor: visual
embed-resources: true
---

```{python}
#|code-fold: true
import altair as alt
import pandas as pd
from vega_datasets import data
```

## Revisiting Homework 3

The first plot that stuck out to me in a negative light was the one below (fig 1.1). I don't feel that it communicated much, and it first mislead me to believe that the 'Genetic Score' represented the percentage of DNA or genes the twins shared with their counterpart.

![fig 1.1](bad_plot.png)

As for a plot that I enjoyed, the one below (fig 1.2) shows the genetic makeup according to each kit, and easily compares it to their twin.

![fig 1.2](good_image.png)

```{python}
#|code-fold: true

genes = pd.read_csv("https://calvin-data304.netlify.app/data/twins-genetics-long.csv")


kit_chart = alt.Chart(genes).mark_bar().encode(
    x=alt.X('kit:N', title = 'Kit'),
    y=alt.Y('genetic share:Q', title = 'Genetic Share'),
    color=alt.Color('region',title = 'Region', legend=alt.Legend(labelFontSize=12)),
    tooltip=['kit', 'genetic share']
).properties(
    width = 125,
    height = 200
).facet(
  facet=alt.Facet('twin:N', title = 'Twin'),
  columns=4,
  title = 'Comparison of Genetic Share by Kit'
)

kit_chart
```

fig 1.3

```{python}
#|code-fold: true

twin_chart = alt.Chart(genes).transform_filter(
  alt.datum.kit == 'Ancestry'
  ).mark_bar().encode(
    x=alt.X('twin:N', title = 'Twin', axis=alt.Axis(labelAngle=0)),
    y=alt.Y('genetic share:Q', title = 'Genetic Share: Ancestry'),
    color=alt.Color('region',title = 'Region', legend=alt.Legend(labelFontSize=12)),
    tooltip=['genetic share']
).properties(
    width = 400,
     height = 300,
    title = 'Comparison of Genetic Share of Twins'
).configure_scale(
    bandPaddingInner=0.2 
)

twin_chart
```

fig 1.4\
\
\
After exploring the data and creating the charts above, there are clear conclusion that can be drawn. In fig 1.3, it is clear that the kits do not have much variability between each other. This is a good sign, and would suggest that each kit is relatively accurate (I am assuming that they're all not bad which I suppose could be the other possibility). However there are two spots that stand out to me in fig 1.3: The 23 and Me of twin 3A, and MyHeritage of 4B. These two bars include what seems to be an outlier compared to the other kits for that twin. In 3A, 23 and Me shows 7% West Africa, when the other kits have little to none. Similarly, in 4B, MyHeritage shows that there is 9% SE Europe, when there is none in the other kits. However, I do think that based off of the other twins, there is not much variability between each kit, at least not enough that it would be worth it to pay more money for.

In fig 1.4, there is little to no variability between the genetic share of the twin counterpart. So, if you happen to be a twin, and your twin took an Ancestry DNA test, I would recommend not getting your genes tested, as they will most likely be almost identical.

## Revisiting Homework 7

```{python}
#|code-fold: true

countries_url = "https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv"

countries = pd.read_csv(countries_url)
#print(countries[0:4])

gas = pd.read_csv("pump_price_for_gasoline_us_per_liter.csv")
#print(gas[0:4])

countries.rename(columns={'name': 'country'}, inplace = True)

year_columns = gas.columns[1:][gas.columns[1:].str.isnumeric()]

odd_years = [int(year) for year in year_columns if int(year) % 2 != 0]

filtered_gas = gas.drop(columns=[str(year) for year in odd_years])

melted_gas = pd.melt(filtered_gas, id_vars=['country'], var_name='year', value_name='gas_value')

gas_countries = pd.merge(countries, melted_gas, on = 'country')
```

```{python}
#|code-fold: true

gas_countries['gas_value'] = gas_countries['gas_value'].astype(float)

average_gas = gas_countries.groupby(['year', 'region']).agg(average_gas=('gas_value', lambda x: x.mean(skipna=True))).reset_index()

gas_chart = alt.Chart(average_gas).encode(
  alt.X("year:O", title='Year'),
  alt.Y("average_gas:Q", title= 'Average Gas Price (per gal)'),
    color=alt.Color('region:N', title='Region', legend=alt.Legend(labelFontSize=12)),
    tooltip=['average_gas','region', 'year']
).properties(width = 600, title = 'Average Gas Price per Region')

gas_chart.mark_line() + gas_chart.mark_point()
```

fig 2.1

I improved my previous submission of homework 7 and it can be seen in fig 2.1. First, I added a legend, and renamed the titles to make them uppercase, and overall giving it a cleaner look. The main change I wanted to make is to add the missing data between the years 1992 and 1998. I had thought that there was a gap here because some of the countries in a region had a NULL value for one of these years, thus preventing the mean calculation to be made. I added `.agg(average_gas=('gas_value', lambda x: x.mean(skipna=True))).reset_index()` to solve this problem. To my dismay, after looking at the unchanged graph, I realized that there are in fact no gas values for any country in the regions of the missing years. However, if someone were to add some data, my graph would be able to handle it.

##  A New Challenge

```{python}
#|code-fold: true

tanz = pd.read_excel("Tanzania_women.xlsx")

tanz['Year'] = tanz['Year'].astype(str)

tanz['F_rate_15-49'] = tanz['F_rate_15-49'].astype(float)

tanz['Perc_contraceptive'] = tanz['Perc_contraceptive'] / 100

tanz['Perc_need_family_planning'] = tanz['Perc_need_family_planning'] / 100


tanz_chart_fert = alt.Chart(tanz).encode(
  alt.X("Year:O", title='Year',axis=alt.Axis(labelAngle=0)),
  alt.Y("F_rate_15-49:Q",title = None, axis=alt.Axis(format='r')),
  tooltip=['F_rate_15-49','Year']
).properties(width = 300,
  title= 'Total Fertility Rate of Women Ages 15-49')

tanz_chart_cont = alt.Chart(tanz).encode(
  alt.X("Year:O", title='Year',axis=alt.Axis(labelAngle=0)),
  alt.Y("Perc_contraceptive:Q", title = None, axis=alt.Axis(format='%')),
  tooltip=['Perc_contraceptive','Year']
).properties(width = 300,
  title= 'Percentage of Women That use up-to-date Contraceptives')

tanz_chart_fam = alt.Chart(tanz).encode(
  alt.X("Year:O", title='Year',axis=alt.Axis(labelAngle=0)),
  alt.Y("Perc_need_family_planning:Q",title = None, axis=alt.Axis(format='%')),
  tooltip=['Perc_need_family_planning','Year']
).properties(width = 300,
  title= 'Percentage of Women That Have an Unmet Need for Family Planning')

tanz_chart_fert.mark_line() | tanz_chart_fam.mark_line() | tanz_chart_cont.mark_line()
```

fig 3.1

Within the first few seconds of looking at the dataset I could tell that there was a clear pattern. In the figure above (fig 3.1), one can see that there is a clear trend between the fertility rate, the unmet need for family planning, and use of contraceptives in Tanzania. As the surveys were collected, each one saw a decrease in fertility rate, and unmet need for family planning, while there was an increase of contraceptives used. Using these conclusions, it can be reasonable stated that the birthrate of Tanzanian women decreased throughout the course of the surveys. Tanzanian women were having less kids, due to the increased usage of modern contraceptives.

## My Masterpiece

```{python}
#|code-fold: true

country_temp = pd.read_csv("GlobalLandTemperaturesByCountry.csv")

country_temp.rename(columns={'Country': 'country'}, inplace = True)

country_temp_2 = pd.merge(countries, country_temp, on = 'country')

country_temp_2['dt'] = pd.to_datetime(country_temp_2['dt'])
```

```{python}
#|code-fold: true



average_temp = country_temp_2.groupby(['dt', 'region']).agg(average_temp=('AverageTemperature', lambda x: x.mean(skipna=True))).reset_index()

average_temp['year'] = average_temp['dt'].dt.year

average_temp_yearly = average_temp.groupby(['year', 'region']).agg(avg_temp_per_year=('average_temp', 'mean')).reset_index()


smaller_temp = average_temp_yearly.iloc[:5000]

smaller_temp = smaller_temp[(smaller_temp['year'] % 10 == 0)]

temp_chart = alt.Chart(smaller_temp).encode(
    alt.X("year:O", title='Date', axis=alt.Axis(labelAngle=0)),
    alt.Y("avg_temp_per_year:Q", title='Average Temperature'),
    color=alt.Color('region:N', title='Region', legend=alt.Legend(labelFontSize=12)),
    tooltip=['avg_temp_per_year', 'region', 'year']
).properties(
    title='Average Temperature per Region',
    width = 800
).mark_line()

label_data = pd.DataFrame({'y': [15], 'label': ['15Â°C']})

labels = alt.Chart(label_data).mark_text(align='left', dx=5, dy=3).encode(
    y='y:Q',
    text='label'
)

chart_with_labels = temp_chart + labels

chart_with_labels
```

fig 4.1

I got my data from a kaggle page by Berkeley Earth titled Climate Change: Earth Surface Temperature data (<https://www.kaggle.com/datasets/berkeleyearth/climate-change-earth-surface-temperature-data?resource=download&select=GlobalLandTemperaturesByCountry.csv>). I chose to use the country specific dataset, as then I could easily merge it with the country data set from homework 7. From there I calculated the average temp per region, then the average temp per year. I tried having each year plotted for a tick on the x axis, but it became overcrowded quite quickly. I ran into the issue the Altair wouldn't let me plot with such a big dataset, so I cut some of it off, then dropped any year that didn't end in a 5 or a 0. Overall, I wouldn't consider this my masterpiece, as I am not happy with the final product. It did however take a long time to create, and as of now I am content with the time that I spent on it.

The story in this data is quite obvious. When looking at fig 4.1 one can clearly see a gradual increase in average temperature for all regions barring Oceania. There needs to be something done about climate change, but it seems like political influence, monetary greed and lack of awarness is preventing us as humans from stopping it.

## Using my Palette

In almost all of my graphics I used color tooltips in the encoding channel section.

I also faceted in the revision of homework 3, and in the new challenge dataset.

I included layers in both of my line graphs showing regional development in different areas.

I used concatenation in the revison of homework 3, specifying the number of columns in the facet.

In the masterpiece, I changed the scale of the x axis ticks to only show years ending in 5 and 0.

In most of my graphics I added the hover tooltip where more information can be obtianed by hovering over a data point.

## Keep Learning

Times I used techniques we had not learned:

1.  In my masterpiece, I added a 15 degrees label located in the middle of the plot at the 15 degrees level from the y axis.
2.  I changed the size of the legend in a few of my plots, and I also added a percentage sign to the y axis in the new challenge plot.

Two concepts I kept in mind from class when working:

1.  Do not use unnecessary color. In my new challenge graphic I was tempted to use a different color for each plot, but I remembered what we had discussed in class.
2.  I also kept in mind the path of the viewers eyes. In the homework 3 revision, I made a point to keep the layout in a way where each twin pair was next to each other, so comparing the two would be natural.

\
\
\
